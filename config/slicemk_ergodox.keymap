#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {    
    behaviors {
        left_home: left_home {
            compatible = "zmk,behavior-mod-morph";
            label = "LEFT_HOME";
            #binding-cells = <0>;
            bindings = <&kp LEFT>, <&kp HOME>;
            mods = <(MOD_RALT)>;
        };
		right_end: right_end {
            compatible = "zmk,behavior-mod-morph";
            label = "RIGHT_END";
            #binding-cells = <0>;
            bindings = <&kp RIGHT>, <&kp END>;
            mods = <(MOD_RALT)>;
		};
    };
};

/ {
	keymap {
		compatible = "zmk,keymap";
		layer_0 {
			bindings = <
				&bootloader
				&none          &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5 &none       &none   &kp NUMBER_6 &kp NUMBER_7  &kp NUMBER_8 &kp NUMBER_9 &kp NUMBER_0  &none
				&kp MINUS      &kp Q        &kp W        &kp E        &kp R        &kp T        &mo 2       &mo 2   &kp Y        &kp U         &kp I        &kp O        &kp P         &kp BSLH
				&kp GRAVE      &kp A        &kp S        &kp D        &kp F        &kp G                            &kp H        &kp J         &kp K        &kp L        &kp SEMICOLON &kp QUOT
				&kp LEFT_SHIFT &kp Z        &kp X        &kp C        &kp V        &kp B        &lt 3 EQUAL &none   &kp N        &kp M         &kp CMMA     &kp DOT      &kp FSLH      &mt RSHIFT CAPS
				&kp LCTRL      &kp LGUI     &kp LALT     &kp DOWN     &kp UP                                                     &left_home    &right_end   &kp RALT     &kp RGUI      &kp RCTRL
				                                                                   &mo 1        &kp ESC     &none   &none
				                                                      &kp SPACE    &kp TAB      &none       &kp INS &kp ENTER    &kp BACKSPACE
				                                                                                &kp K_APP   &kp DEL
			>;
		};
		layer_1 {
			bindings = <
				&bootloader
				&none  &none         &none          &none            &none                &none  &kp F11 &kp F12 &none  &none                 &none             &none           &none            &bootloader
				&none  &kp F1        &kp F2         &kp F3           &kp F4               &kp F5 &none   &none   &kp F6 &kp F7                &kp F8            &kp F9          &kp F10          &none
				&none  &kp LESS_THAN &kp LEFT_BRACE &kp LEFT_BRACKET &kp LEFT_PARENTHESIS &none                  &none  &kp RIGHT_PARENTHESIS &kp RIGHT_BRACKET &kp RIGHT_BRACE &kp GREATER_THAN &none
				&trans &none         &none          &none            &none                &none  &none   &none   &none  &none                 &none             &none           &none            &trans
				&trans &trans        &trans         &trans           &trans                                             &trans                &trans            &trans          &trans           &trans
				                                                                          &trans &trans  &trans  &trans
				                                                     &trans               &trans &trans  &trans  &trans &trans
				                                                                                 &trans  &trans
			>;
		};
		layer_2 {
			bindings = <
				&bootloader
				&none  &none  &none          &none             &none      &none  &none  &none  &none  &none  &none        &none        &none        &none
				&none  &none  &none          &kp C_VOLUME_UP   &none      &none  &none  &none  &none  &none  &kp NUMBER_7 &kp NUMBER_8 &kp NUMBER_9 &none
				&none  &none  &kp C_PREVIOUS &kp C_PLAY        &kp C_NEXT &none                &none  &none  &kp NUMBER_4 &kp NUMBER_5 &kp NUMBER_6 &none
				&trans &none  &kp C_MUTE     &kp C_VOLUME_DOWN &kp C_STOP &none  &none  &none  &none  &none  &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &trans
				&trans &trans &trans         &trans            &trans                                 &trans &trans       &trans       &trans       &trans
				                                                          &trans &trans &trans &trans
				                                               &trans     &trans &trans &trans &trans &trans
				                                                                 &trans &trans
			>;
		};
		layer_3 {
			bindings = <
				&bootloader
				&none  &none    &none  &none     &none      &none  &none  &none  &none  &none       &none     &none         &none        &none
				&none  &none    &none  &kp MINUS &none      &none  &none  &none  &none  &none       &kp PLUS  &none         &none        &none
				&none  &kp EXCL &kp AT &kp HASH  &kp DOLLAR &none                &none  &kp PERCENT &kp CARET &kp AMPERSAND &kp ASTERISK &none
				&trans &none    &none  &none     &none      &none  &none  &none  &none  &none       &none     &none         &none        &trans
				&trans &trans   &trans &trans    &trans                                 &trans      &trans    &trans        &trans       &trans
				                                            &trans &trans &trans &trans
				                                 &trans     &trans &trans &trans &trans &trans
				                                                   &trans &trans
			>;
		};
		layer_4 {
			bindings = <
				&bootloader
				&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
				&none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
				&none  &none  &none  &none  &none  &none                &none  &none  &none  &none  &none  &none
				&trans &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &trans
				&trans &trans &trans &trans &trans                             &trans &trans &trans &trans &trans
				                                   &trans &trans &trans &trans
				                            &trans &trans &trans &trans &trans &trans
				                                          &trans &trans
			>;
		};
	};

};
